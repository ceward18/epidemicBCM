lines(resThree[[3]][,'knots[1]'], col = 'blue')
exp(-0.3)
1/0.35
exp(-0.4)/exp(0.63)
exp(0.63)/exp(-0.4)
betaSamples1 <- t(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
betaSamples2 <- t(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))])
betaSamples3 <- t(resThree[[3]][,grep('beta\\[', colnames(resThree[[3]]))])
betaSamples <- cbind(betaSamples1, betaSamples2, betaSamples3)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
par(mfrow = c(2,3))
plot(resThree[[1]][,'b[1]'], type = 'l', ylim = c(-3, 0))
lines(resThree[[2]][,'b[1]'], col = 'red')
lines(resThree[[3]][,'b[1]'], col = 'blue')
plot(resThree[[1]][,'b[2]'], type = 'l', ylim = c(-4, -1))
lines(resThree[[2]][,'b[2]'], col = 'red')
lines(resThree[[3]][,'b[2]'], col = 'blue')
plot(resThree[[1]][,'b[3]'], type = 'l', ylim = c(-10, 0))
lines(resThree[[2]][,'b[3]'], col = 'red')
lines(resThree[[3]][,'b[3]'], col = 'blue')
plot(resThree[[1]][,'knots[1]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[1]'], col = 'red')
lines(resThree[[3]][,'knots[1]'], col = 'blue')
plot(resThree[[1]][,'knots[2]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[2]'], col = 'red')
lines(resThree[[3]][,'knots[2]'], col = 'blue')
plot(resThree[[1]][,'knots[3]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[3]'], col = 'red')
lines(resThree[[3]][,'knots[3]'], col = 'blue')
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy/scripts")
i <- 451
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 451
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
par(mfrow = c(2,3))
plot(resThree[[1]][,'b[1]'], type = 'l', ylim = c(-3, 0))
lines(resThree[[2]][,'b[1]'], col = 'red')
lines(resThree[[3]][,'b[1]'], col = 'blue')
plot(resThree[[1]][,'b[2]'], type = 'l', ylim = c(-4, -1))
lines(resThree[[2]][,'b[2]'], col = 'red')
lines(resThree[[3]][,'b[2]'], col = 'blue')
plot(resThree[[1]][,'b[3]'], type = 'l', ylim = c(-10, 0))
lines(resThree[[2]][,'b[3]'], col = 'red')
lines(resThree[[3]][,'b[3]'], col = 'blue')
plot(resThree[[1]][,'knots[1]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[1]'], col = 'red')
lines(resThree[[3]][,'knots[1]'], col = 'blue')
plot(resThree[[1]][,'knots[2]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[2]'], col = 'red')
lines(resThree[[3]][,'knots[2]'], col = 'blue')
plot(resThree[[1]][,'knots[3]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[3]'], col = 'red')
lines(resThree[[3]][,'knots[3]'], col = 'blue')
betaSamples1 <- t(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
betaSamples2 <- t(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))])
betaSamples3 <- t(resThree[[3]][,grep('beta\\[', colnames(resThree[[3]]))])
betaSamples <- cbind(betaSamples1, betaSamples2, betaSamples3)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
line(postSummaries$postBeta$lower, lty = 2)
line(postSummaries$postBeta$upper, lty = 2)
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
betaSamples <- cbind(betaSamples3, betaSamples3, betaSamples3)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
betaSamples <- cbind(betaSamples2, betaSamples2, betaSamples2)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
betaSamples <- cbind(betaSamples1, betaSamples1, betaSamples1)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
head(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
colMeans(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
colMeans(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))])
plot(colMeans(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))]))
plot(colMeans(resThree[[3]][,grep('beta\\[', colnames(resThree[[3]]))]))
plot(colMeans(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))]))
betaSamples1 <- t(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
betaSamples2 <- t(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))])
betaSamples3 <- t(resThree[[3]][,grep('beta\\[', colnames(resThree[[3]]))])
betaSamples <- cbind(betaSamples3, betaSamples2, betaSamples3)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
plot(postMeans)
par(mfrow = c(2,3))
plot(resThree[[1]][,'b[1]'], type = 'l', ylim = c(-3, 0))
lines(resThree[[2]][,'b[1]'], col = 'red')
lines(resThree[[3]][,'b[1]'], col = 'blue')
plot(resThree[[1]][,'b[2]'], type = 'l', ylim = c(-4, -1))
lines(resThree[[2]][,'b[2]'], col = 'red')
lines(resThree[[3]][,'b[2]'], col = 'blue')
plot(resThree[[1]][,'b[3]'], type = 'l', ylim = c(-10, 0))
lines(resThree[[2]][,'b[3]'], col = 'red')
lines(resThree[[3]][,'b[3]'], col = 'blue')
plot(resThree[[1]][,'knots[1]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[1]'], col = 'red')
lines(resThree[[3]][,'knots[1]'], col = 'blue')
plot(resThree[[1]][,'knots[2]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[2]'], col = 'red')
lines(resThree[[3]][,'knots[2]'], col = 'blue')
plot(resThree[[1]][,'knots[3]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[3]'], col = 'red')
lines(resThree[[3]][,'knots[3]'], col = 'blue')
head(resThree[[1]],1)
head(resThree[[2]],1)
head(resThree[[3]],1)
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy/scripts")
i <- 451
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
par(mfrow = c(2,3))
plot(resThree[[1]][,'b[1]'], type = 'l', ylim = c(-3, 0))
lines(resThree[[2]][,'b[1]'], col = 'red')
lines(resThree[[3]][,'b[1]'], col = 'blue')
plot(resThree[[1]][,'b[2]'], type = 'l', ylim = c(-4, -1))
lines(resThree[[2]][,'b[2]'], col = 'red')
lines(resThree[[3]][,'b[2]'], col = 'blue')
plot(resThree[[1]][,'b[3]'], type = 'l', ylim = c(-10, 0))
lines(resThree[[2]][,'b[3]'], col = 'red')
lines(resThree[[3]][,'b[3]'], col = 'blue')
plot(resThree[[1]][,'knots[1]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[1]'], col = 'red')
lines(resThree[[3]][,'knots[1]'], col = 'blue')
plot(resThree[[1]][,'knots[2]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[2]'], col = 'red')
lines(resThree[[3]][,'knots[2]'], col = 'blue')
plot(resThree[[1]][,'knots[3]'], type = 'l', ylim = c(1, 50))
lines(resThree[[2]][,'knots[3]'], col = 'red')
lines(resThree[[3]][,'knots[3]'], col = 'blue')
betaSamples1 <- t(resThree[[1]][,grep('beta\\[', colnames(resThree[[1]]))])
betaSamples2 <- t(resThree[[2]][,grep('beta\\[', colnames(resThree[[2]]))])
betaSamples3 <- t(resThree[[3]][,grep('beta\\[', colnames(resThree[[3]]))])
betaSamples <- cbind(betaSamples1, betaSamples2, betaSamples3)
postMeans <- rowMeans(betaSamples)
postCI <- apply(betaSamples, 1, quantile, probs = c(0.025, 0.975))
postBeta <- data.frame(time = 1:length(postMeans),
mean = postMeans,
lower = postCI[1,],
upper = postCI[2,])
plot(postMeans)
postSummaries$postBeta$mean
plot(postSummaries$postBeta$mean, type = 'l')
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
plot(postSummaries$postBeta$mean, type = 'l', ylim = c(0, 1))
lines(postSummaries$postBeta$lower, lty = 2)
lines(postSummaries$postBeta$upper, lty = 2)
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy/scripts")
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
which(allFits$alarmFit == 'spline')
i <- 151
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
25/32
postSummaries$gdiag
plot(postSummaries$postAlarm$mean)
0.2*8
57.6/60
12*0.05
8+6+6+10+0.4*6+8+88
8+6+6+10+0.4*6+8+8
8+6+6+10+0.4*6+8+8+8
56.4/60
48.1/60
47.6/60
.582*.02
.051*0.98
0.01164+0.04998
0.0116+round(.051*0.98, 4)
round(.582*.02, 4)+round(.051*0.98, 4)
round(.582*.02, 4)
round(.051*0.98, 4)
round(.582*.02, 3)+round(.051*0.98, 3)
round(.582*.02, 2)+round(.051*0.98, 2)
round(.582*.02, 6)+round(.059*0.98, 6)
round(.582*.02, 6)+round(.049*0.98, 6)
round(.582*.02, 6)+round(.05*0.98, 6)
round(.582*.02, 6)+round(.052*0.98, 6)
round(.582*.02, 10)+round(.052*0.98, 10)
44.9/60
48.9/60
23.1/33
18.5/32
.602*0.03 + .97*0.011
.602*0.03
0.01806/0.02873
0.0181/0.02873
0.0181/0.0287
50.2/60
52.3/60
1 - pt(-1.785214796, 7)
pt(-1.785214796, 8)
57.6/60
4300+c(-1, 1)*1.96*760/sqrt(63)
4300+c(-1, 1)*qt(0.97)*760/sqrt(63)
4300+c(-1, 1)*qt(0.97, 62)*760/sqrt(63)
4300+c(-1, 1)*qt(0.975, 62)*760/sqrt(63)
4300+c(-1, 1)*round(qt(0.975, 62), 4)*760/sqrt(63)
4300+c(-1, 1)*round(qt(0.975, 62), 4)*round(760/sqrt(63),4)
4300+c(-1, 1)*round(qt(0.975, 62), 2)*round(760/sqrt(63),2)
4300+c(-1, 1)*round(qt(0.995, 62), 2)*round(760/sqrt(63),2)
4300+c(-1, 1)*round(qt(0.985, 62), 2)*round(760/sqrt(63),2)
4300+c(-1, 1)*round(qt(0.98, 62), 2)*round(760/sqrt(63),2)
4300+c(-1, 1)*round(qt(0.98, 62), 4)*round(760/sqrt(63),4)
58/60
4450+c(-1, 1)*1.96*720/sqrt(63)
4450+c(-1, 1)*round(qt(0.975, 62), 4)*720/sqrt(63)
4300+c(-1, 1)*round(qt(0.975, 62), 4)*700/sqrt(61)
4300+c(-1, 1)*1.96*700/sqrt(61)
4350+c(-1, 1)*1.96*740/sqrt(60)
0.602*0.04
0.96*(1-0.979)
0.0241+0.0202
0.602*0.04/0.0452
0.602*0.04 + 0.96*(1-0.979)
0.602*0.04 + 0.96*(1-0.989)
0.602*0.04 + 0.96*0.031
0.602*0.04 + 0.96*0.021
0.602*0.04 + 0.96*0.025
0.602*0.04 + 0.96*0.022
4250+c(-1, 1)*1.96*780/sqrt(60)
4250/780
4250+c(-1, 1)*round(qt(0.975, 62), 4)*720/sqrt(60)
4250+c(-1, 1)*round(qt(0.975, 62), 4)*round(720/sqrt(60),4)
4250+c(-1, 1)*1.96*round(720/sqrt(60),4)
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
allFits[seq(1:1501, 50)]
allFits[seq(1:1501, 50),]
allFits[seq(1,1501, 50),]
tmp <- allFits[seq(1,1500, 50),]
rownames(tmp) <- 1:30
tmp
