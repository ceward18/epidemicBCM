alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('Alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
i
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 7
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('Alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
i
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 8
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
i
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 8
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 9
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
i
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 10
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 11
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
infPeriod <- c('fixed')
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betat', 'basic')
smoothWindow <- c(14, 30)
allFits <- expand.grid(simNumber = 1:nSim,
infPeriod = infPeriod,
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
# 1500 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
print(paste0('Now starting row: ', i))
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste('alarm Gen:', alarmGen_i,
', alarm fit:', alarmFit_i,
', smoothing window:', smoothWindow_i,
', simulation:', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
par(mfrow = c(2,2))
plot(resThree[[1]][,'beta'], type = 'l', ylim = c(0, 1))
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l', ylim = c(0, 1))
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
167+221
221-33
188+126
