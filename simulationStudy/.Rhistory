alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFitsExp <- expand.grid(simNumber = 1,
infPeriod = 'exp',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFits <- rbind.data.frame(allFitsFixed,
allFitsExp)
# 3000 rows
rownames(allFits) <- 1:nrow(allFits)
allFits$timeIter <- rep(NA, nrow(allFits))
for (i in 1:nrow(allFits)) {
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
if (infPeriod_i == 'exp') {
incData <- incData[,grep('Istar', colnames(incData))]
}
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
allFits$timeIter[i] <- suppressMessages(fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = 1))
}
allFits$niter <- rep(c(8e5, 6e5, 6e5, 8e5,  1e6, 6e5, 3e5), 4)
allFits
1e6
# in minutes
allFits$time <- allfits$timeIter/100*allFits$niter /60
# in minutes
allFits$time <- allFits$timeIter/100*allFits$niter /60
allFits
200*50
200*50/60
200*50/60/24
1*50/60/24
# total runtime in days
allFits$time <- allFits$timeIter/100*allFits$niter * 50 /60/60/24
allFits
7*24
i <- 1501
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFitsFixed <- expand.grid(simNumber = 1:nSim,
infPeriod = 'fixed',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFitsExp <- expand.grid(simNumber = 1:nSim,
infPeriod = 'exp',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFits <- rbind.data.frame(allFitsFixed,
allFitsExp)
# 3000 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
# fit models in batches of 50 (30 batches total)
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
if (infPeriod_i == 'exp') {
incData <- incData[,grep('Istar', colnames(incData))]
}
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
debugonce(summarizePost)
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
head(resThree[[1]])
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
'
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
dim(RstarPost)
head(RstarPost)
RstarPost[,6]
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postPredInc[,1]
postPredInc[2,]
postPredInc[1,]
plot(postPredInc[1,])
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
modelCode
parentNodes
postIdx <- sample(1:nrow(paramsPost), 1)
betaPost <- paramsPost[postIdx, 'beta']
rateIPost <- paramsPost[postIdx, 'rateI']
RstarPostSamp <- RstarPost[postIdx, ]
rateIPost
RstarPostSamp
dataNodes <- c(dataNodes, paste0('Rstar[', predTime, ']'))
sim_R <- simulator(myModelPred, dataNodes)
sim_C <- compileNimble(sim_R)
# get order of parameters
parentNodes <- myModelPred$getParents(dataNodes, stochOnly = TRUE)
parentNodes <- parentNodes[-which(parentNodes %in% dataNodes)]
parentNodes <- myModelPred$expandNodeNames(parentNodes, returnScalarComponents = TRUE)
nPost <- 10000
postPredInc <- matrix(NA, nrow = 50, ncol = nPost)
set.seed(1)
postIdx <- sample(1:nrow(paramsPost), 1)
betaPost <- paramsPost[postIdx, 'beta']
rateIPost <- paramsPost[postIdx, 'rateI']
RstarPostSamp <- RstarPost[postIdx, ]
RstarPostSamp
alarmFit
alarmParamPost <- paramsPost[postIdx, c('delta', 'H')]
trueVals <- c(betaPost, alarmParamPost, dataObs)
trueVals <- c(trueVals, rateIPost, RstarPostSamp)
trueVals[parentNodes]
trueVals <- trueVals[parentNodes]
apply(sim_C$run(trueVals, 10), 2, median)
apply(sim_C$run(trueVals, 10), 2, median)
apply(sim_C$run(trueVals, 10), 2, median)
apply(sim_C$run(trueVals, 10), 2, median)
apply(sim_C$run(trueVals, 10), 2, median)
plot( apply(sim_C$run(trueVals, 10), 2, median))
predTime
plot(apply(sim_C$run(trueVals, 10), 2, median)[1:50])
H
alarmPost
trueVals
.388809e-01 8.075164e-01 4.215119e-05
.388809e-01
8.075164e-01
4.215119e-05
0.00004
dataNodes
grep('Istar', dataNodes)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postParams
postSummaries$postEpiPred
postSummaries$waic
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 1701
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFitsFixed <- expand.grid(simNumber = 1:nSim,
infPeriod = 'fixed',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFitsExp <- expand.grid(simNumber = 1:nSim,
infPeriod = 'exp',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFits <- rbind.data.frame(allFitsFixed,
allFitsExp)
# 3000 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
which(allFits$alarmFit == 'gp')
i <- 1801
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
if (infPeriod_i == 'exp') {
incData <- incData[,grep('Istar', colnames(incData))]
}
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
7/2
3.5*24
4*24
25*120
postSummaries$gdiag
postSummaries$waic
postSummaries$postEpiPred
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 1
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFitsFixed <- expand.grid(simNumber = 1:nSim,
infPeriod = 'fixed',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFitsExp <- expand.grid(simNumber = 1:nSim,
infPeriod = 'exp',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFits <- rbind.data.frame(allFitsFixed,
allFitsExp)
# 3000 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
25*120
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
if (infPeriod_i == 'exp') {
incData <- incData[,grep('Istar', colnames(incData))]
}
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
which(allFits$alarmFit == 'basic')
postSummaries$postAlarm
postSummaries$postEpiPred
postSummaries$waic
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/simulationStudy")
i <- 601
# load libraries
library(nimble)
library(parallel)
# set up grid of models to fit
nSim <- 50
alarmGen <- c('thresh', 'hill', 'power')
alarmFit <- c('thresh', 'hill', 'power', 'spline', 'gp', 'betatSpline', 'basic')
smoothWindow <- c(14, 30)
allFitsFixed <- expand.grid(simNumber = 1:nSim,
infPeriod = 'fixed',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFitsExp <- expand.grid(simNumber = 1:nSim,
infPeriod = 'exp',
alarmGen = alarmGen,
alarmFit = alarmFit,
smoothWindow = smoothWindow,
stringsAsFactors = FALSE)
allFits <- rbind.data.frame(allFitsFixed,
allFitsExp)
# 3000 rows
allFits <- allFits[-which(allFits$alarmFit %in% alarmGen &
allFits$alarmFit != allFits$alarmGen),]
rownames(allFits) <- 1:nrow(allFits)
simNumber_i <- allFits$simNumber[i]
infPeriod_i <- allFits$infPeriod[i]
alarmGen_i <- allFits$alarmGen[i]
alarmFit_i <- allFits$alarmFit[i]
smoothWindow_i <- allFits$smoothWindow[i]
print(paste0('alarm Gen: ', alarmGen_i,
', alarm fit: ', alarmFit_i,
', infectious period: ', infPeriod_i,
', smoothing window: ', smoothWindow_i,
', simulation: ', simNumber_i))
# load data
incData <- readRDS(paste0('./Data/', alarmGen_i, '_',
infPeriod_i, '_', smoothWindow_i, '.rds'))
if (infPeriod_i == 'exp') {
incData <- incData[,grep('Istar', colnames(incData))]
}
# subset row corresponding to simulation number specified
incData <- incData[simNumber_i,]
# only use the first 50 time points for model fitting
incDataFit <- incData[1:50]
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incDataFit',  'infPeriod_i', 'alarmFit_i',
'smoothWindow_i', 'simNumber_i'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incDataFit, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow_i,
simNumber = simNumber_i, seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
debugonce(summarizePost)
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
head(resThree[[1]])
grep('Rstar', colnames(resThree[[1]]))
resThree[[1]][,-grep('Rstar', colnames(resThree[[1]]))]
paramsamples1 <- resThree[[1]]
paramsamples2 <- resThree[[2]]
paramsamples3 <- resThree[[3]]
paramsamples1
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow_i)
postSummaries$gdiag
postSummaries$postEpiPred
postSummaries$postBeta
postSummaries$waic
