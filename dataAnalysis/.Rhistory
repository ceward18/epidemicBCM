ylim(0.5, 7) +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == '1',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F)  %>%
kable_styling()
r0Peak1 <- subset(r0All, peak == '1' & noConverge == 0)
r0Peak1 <- merge(r0Peak1, nycNew,
by.x = 'time', by.y = 'timePeak1',
all.x = T)
ggplot(r0Peak1, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
ylim(0.5, 7) +
geom_hline(yintercept = 1, linetype = 2)
### load posterior estimates of R0 over epidemic time
r0All <- readRDS('./resultsFinal/r0PostAll.rds')
r0All <- r0All[r0All$infPeriod == infPeriodSpec,]
### remove those that did not converge (TEMPORARY)
r0All <- merge(r0All, notConvergeModels,
by = c('alarmFit', 'infPeriod', 'peak'),
all.x = T)
r0All$noConverge[is.na(r0All$noConverge)] <- 0
factor(r0All$alarmFit)
### load posterior estimates of R0 over epidemic time
r0All <- readRDS('./resultsFinal/r0PostAll.rds')
r0All <- r0All[r0All$infPeriod == infPeriodSpec,]
### remove those that did not converge (TEMPORARY)
r0All <- merge(r0All, notConvergeModels,
by = c('alarmFit', 'infPeriod', 'peak'),
all.x = T)
r0All$noConverge[is.na(r0All$noConverge)] <- 0
# format for better plotting
r0All$alarmFit <- factor(r0All$alarmFit,
levels = c('spline', 'gp', 'thresh', 'hill', 'power',
'betatSpline', 'basic'),
labels = c('Spline', 'Gaussian Process',
'Threshold', 'Hill', 'Power',
'Beta[t]', 'Basic'))
r0All <- r0All[order(r0All$alarmFit,
r0All$peak,
r0All$time),]
r0Peak1 <- subset(r0All, peak == '1' & noConverge == 0)
r0Peak1 <- merge(r0Peak1, nycNew,
by.x = 'time', by.y = 'timePeak1',
all.x = T)
ggplot(r0Peak1, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
ylim(0.5, 7) +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == '1',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F)  %>%
kable_styling()
ggplot(subset(nyc, peak== '2'), aes(x = date, y = smoothedCases)) +
geom_line() +
labs(x = "Date", y = "Incidence")
ggplot(subset(alarmAll, peak== '2' & noConverge == 0), aes(x = xAlarm, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = '30-day incidence', y = 'Alarm')
r0Peak2 <- subset(r0All, peak == '2' & noConverge == 0)
r0Peak2 <- merge(r0Peak2, nycNew,
by.x = 'time', by.y = 'timePeak2',
all.x = T)
ggplot(r0Peak2, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
ylim(0.5, 1.25) +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == '2',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F)  %>%
kable_styling()
ggplot(subset(nyc, peak== '3'), aes(x = date, y = smoothedCases)) +
geom_line() +
labs(x = "Date", y = "Incidence")
ggplot(subset(alarmAll, peak== '3' & noConverge == 0), aes(x = xAlarm, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = '30-day incidence', y = 'Alarm')
r0Peak3 <- subset(r0All, peak == '3' & noConverge == 0)
r0Peak3 <- merge(r0Peak3, nycNew,
by.x = 'time', by.y = 'timePeak3',
all.x = T)
ggplot(r0Peak3, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
ylim(0.5, 1.6) +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == '3',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F)  %>%
kable_styling()
ggplot(subset(nyc, peak== '4'), aes(x = date, y = smoothedCases)) +
geom_line() +
labs(x = "Date", y = "Incidence")
ggplot(subset(alarmAll, peak== '4' & noConverge == 0), aes(x = xAlarm, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = '30-day incidence', y = 'Alarm')
r0Peak4 <- subset(r0All, peak == '4' & noConverge == 0)
r0Peak4 <- merge(r0Peak4, nycNew,
by.x = 'time', by.y = 'timePeak4',
all.x = T)
ggplot(r0Peak4, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
ylim(0.5, 2) +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == '4',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F) %>%
kable_styling()
ggplot(nyc, aes(x = date, y = smoothedCases)) +
geom_line() +
labs(x = "Date", y = "Incidence")
ggplot(subset(alarmAll, peak== 'full' & noConverge == 0), aes(x = xAlarm, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = '30-day incidence', y = 'Alarm')
r0PeakFull <- subset(r0All, peak == 'full' & noConverge == 0)
r0PeakFull <- merge(r0PeakFull, nycNew,
by.x = 'time', by.y = 'timeFull',
all.x = T)
ggplot(r0PeakFull, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
geom_hline(yintercept = 1, linetype = 2)
waicPeak <- waicAll[waicAll$peak == 'full',]
kable(waicPeak[,-which(colnames(waicPeak) %in% c('peak', 'infPeriod'))],
row.names = F)  %>%
kable_styling()
ggplot(subset(alarmAll, noConverge == 0), aes(x = xAlarm, y = mean,
group =  alarmFit)) +
geom_line(aes(col = alarmFit)) +
geom_ribbon(aes(ymin=lower, ymax=upper, fill = alarmFit), alpha=0.3) +
facet_wrap(~peak, nrow = 2, scales = 'free_x') +
labs(x = '30-day incidence', y = 'Alarm', col = 'Alarm', fill = 'Alarm')
r0PeakFull <- subset(r0All, peak == 'full')
r0PeakFull <- merge(r0PeakFull, nycNew,
by.x = 'time', by.y = 'timeFull',
all.x = T)
ggplot(r0PeakFull, aes(x = date, y = mean)) +
geom_line() +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.3, fill = 'blue') +
facet_wrap(~alarmFit, nrow = 1) +
labs(x = 'Date', y = 'R0') +
geom_hline(yintercept = 1, linetype = 2)
i <- 5
'1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/dataAnalysis")
'1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
### load libraries
library(parallel)
### read data
nyc <- read.csv('./Data/nycClean.csv')
peak <- c('1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
head(allModels)
allModels
i <- 45
peak_i <- allModels$peak[i]
alarmFit_i <- allModels$alarmFit[i]
infPeriod_i <- allModels$infPeriod[i]
print(paste('Running alarm:', alarmFit_i,
', peak:', peak_i,
', infPeriod:', infPeriod_i))
# get data for the specified peak
if (peak_i == 'full') {
incData <- nyc$smoothedCases
} else {
incData <- nyc$smoothedCases[which(nyc$peak == peak_i)]
}
# initialize current number of infectious and removed individuals
if (peak_i %in% c('full', '1')) {
idxStart <- 5
incData <- incData[-c(1:idxStart)]
} else {
idxStart <- min(which(nyc$peak == peak_i))
incData <- incData[-1]
}
# currently infectious
I0 <- sum(nyc$smoothedCases[max(1, (idxStart - lengthI + 1)):(idxStart)])
R0 <- nyc$cumulativeCases[idxStart] - I0
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
tmp <- fitAlarmModel(incData = incData, N = N, I0 = I0, R0 = R0,
lengthI = lengthI, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow,
seed = 1)
head(tmp)
plot(tmp[,1])
plot(tmp[,'beta;'])
plot(tmp[,'beta'])
plot(tmp[,'rateI'])
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/dataAnalysis")
i <- 17
### load libraries
library(parallel)
### read data
nyc <- read.csv('./Data/nycClean.csv')
peak <- c('1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
# batches by alarmFit (7 batches total)
batchSize <- 4
batchIdx <- batchSize * (idx - 1) + 1:batchSize
peak_i <- allModels$peak[i]
alarmFit_i <- allModels$alarmFit[i]
infPeriod_i <- allModels$infPeriod[i]
print(paste('Running alarm:', alarmFit_i,
', peak:', peak_i,
', infPeriod:', infPeriod_i))
# get data for the specified peak
if (peak_i == 'full') {
incData <- nyc$smoothedCases
} else {
incData <- nyc$smoothedCases[which(nyc$peak == peak_i)]
}
# initialize current number of infectious and removed individuals
if (peak_i %in% c('full', '1')) {
idxStart <- 5
incData <- incData[-c(1:idxStart)]
} else {
idxStart <- min(which(nyc$peak == peak_i))
incData <- incData[-1]
}
# currently infectious
I0 <- sum(nyc$smoothedCases[max(1, (idxStart - lengthI + 1)):(idxStart)])
R0 <- nyc$cumulativeCases[idxStart] - I0
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incData',  'infPeriod_i', 'alarmFit_i',
'N', 'I0', 'R0', 'lengthI', 'smoothWindow'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incData, N = N, I0 = I0, R0 = R0,
lengthI = lengthI, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
N = N, I0 = I0, R0 = R0, lengthI = lengthI,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow)
postSummaries$gdiag
postSummaries$postParams
debugonce(summarizePost)
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
N = N, I0 = I0, R0 = R0, lengthI = lengthI,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow)
head(paramSamples1)
head(paramSamples2)
head(paramSamples3)
plot(paramSamples3[,1])
tail(paramSamples3)
head(RstarSamples1)
colnames(resThree[[1]])
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/dataAnalysis")
i <- 17
### load libraries
library(parallel)
### read data
nyc <- read.csv('./Data/nycClean.csv')
peak <- c('1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
peak_i <- allModels$peak[i]
alarmFit_i <- allModels$alarmFit[i]
infPeriod_i <- allModels$infPeriod[i]
print(paste('Running alarm:', alarmFit_i,
', peak:', peak_i,
', infPeriod:', infPeriod_i))
# get data for the specified peak
if (peak_i == 'full') {
incData <- nyc$smoothedCases
} else {
incData <- nyc$smoothedCases[which(nyc$peak == peak_i)]
}
# initialize current number of infectious and removed individuals
if (peak_i %in% c('full', '1')) {
idxStart <- 5
incData <- incData[-c(1:idxStart)]
} else {
idxStart <- min(which(nyc$peak == peak_i))
incData <- incData[-1]
}
# currently infectious
I0 <- sum(nyc$smoothedCases[max(1, (idxStart - lengthI + 1)):(idxStart)])
R0 <- nyc$cumulativeCases[idxStart] - I0
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incData',  'infPeriod_i', 'alarmFit_i',
'N', 'I0', 'R0', 'lengthI', 'smoothWindow'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incData, N = N, I0 = I0, R0 = R0,
lengthI = lengthI, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
N = N, I0 = I0, R0 = R0, lengthI = lengthI,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow)
postSummaries$gdiag
postSummaries$waic
5/7
setwd("C:/Users/caitl/Documents/Postdoc/epidemicBCM/dataAnalysis")
i <- 1
### load libraries
library(parallel)
### read data
nyc <- read.csv('./Data/nycClean.csv')
peak <- c('1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
# constants for all models
N <- nyc$Population[1]
lengthI <- 7
smoothWindow <- 30
peak_i <- allModels$peak[i]
alarmFit_i <- allModels$alarmFit[i]
infPeriod_i <- allModels$infPeriod[i]
print(paste('Running alarm:', alarmFit_i,
', peak:', peak_i,
', infPeriod:', infPeriod_i))
# get data for the specified peak
if (peak_i == 'full') {
incData <- nyc$smoothedCases
} else {
incData <- nyc$smoothedCases[which(nyc$peak == peak_i)]
}
# initialize current number of infectious and removed individuals
if (peak_i %in% c('full', '1')) {
idxStart <- 5
incData <- incData[-c(1:idxStart)]
} else {
idxStart <- min(which(nyc$peak == peak_i))
incData <- incData[-1]
}
# currently infectious
I0 <- sum(nyc$smoothedCases[max(1, (idxStart - lengthI + 1)):(idxStart)])
R0 <- nyc$cumulativeCases[idxStart] - I0
# run three chains in parallel
cl <- makeCluster(3)
clusterExport(cl, list('incData',  'infPeriod_i', 'alarmFit_i',
'N', 'I0', 'R0', 'lengthI', 'smoothWindow'))
resThree <- parLapplyLB(cl, 1:3, function(x) {
library(nimble)
# source relevant scripts
source('./scripts/modelFits.R')
fitAlarmModel(incData = incData, N = N, I0 = I0, R0 = R0,
lengthI = lengthI, infPeriod = infPeriod_i,
alarmFit = alarmFit_i, smoothWindow = smoothWindow,
seed = x)
})
stopCluster(cl)
source('./scripts/summarizePost.R')
# debugonce(summarizePost)
postSummaries <- summarizePost(resThree = resThree, incData = incData,
N = N, I0 = I0, R0 = R0, lengthI = lengthI,
alarmFit = alarmFit_i, infPeriod = infPeriod_i,
smoothWindow = smoothWindow)
postSummaries$gdiag
par(mfrow = c(1, 3))
plot(resThree[[1]][,'beta'], type = 'l')
lines(resThree[[2]][,'beta'], col = 'red')
lines(resThree[[3]][,'beta'], col = 'blue')
plot(resThree[[1]][,'delta'], type = 'l')
lines(resThree[[2]][,'delta'], col = 'red')
lines(resThree[[3]][,'delta'], col = 'blue')
plot(resThree[[1]][,'H'], type = 'l')
lines(resThree[[2]][,'H'], col = 'red')
lines(resThree[[3]][,'H'], col = 'blue')
plot(postSummaries$postAlarm$mean)
plot(postSummaries$postAlarm$mean, type = 'l')
plot(postSummaries$postAlarm$xAlarm, postSummaries$postAlarm$mean, type = 'l')
### read data
nyc <- read.csv('./Data/nycClean.csv')
peak <- c('1', '2', '3', '4')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
infPeriod <- 'fixed'
# 56 possibilities (7 alarmFits, 4 peaks, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
allModels
### load libraries
library(parallel)
### read data
nyc <- read.csv('./Data/nycClean.csv')
nyc <- nyc[1:745,]
peak <- c('full')
alarmFit <- c( 'thresh', 'hill', 'power', 'gp', 'spline', 'betatSpline', 'basic')
# 14 possibilities (7 alarmFits, full data, 2 infPeriods)
allModelsFixed <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'fixed')
allModelsExp <- expand.grid(peak = peak,
alarmFit = alarmFit,
infPeriod = 'exp')
allModels <- rbind.data.frame(allModelsFixed, allModelsExp)
allModels
